version: "3"
services:
  spark:
    build:
      context: ./spark
    env_file:
      - ./envfiles/.kafka.env
    command: tail -f /dev/null
    volumes:
      - ./spark:/app
    depends_on:
      - spark-master
      - spark-worker-1
    environment:
      - ENABLE_INIT_DAEMON=false
      - PYSPARK_PYTHON=python3
      - PYSPARK_DRIVER_PYTHON=python3
  spark-master:
    image: bde2020/spark-master:2.4.4-hadoop2.7
    container_name: spark-master
    ports:
      - "8080:8080"
      - "7077:7077"
    environment:
      - INIT_DAEMON_STEP=setup_spark
      - PYSPARK_PYTHON=/usr/bin/python3.7
      - PYSPARK_DRIVER_PYTHON=/usr/bin/python3.7
  spark-worker-1:
    image: bde2020/spark-worker:2.4.4-hadoop2.7
    container_name: spark-worker-1
    volumes:
      - ./spark:/app
    depends_on:
      - spark-master
    ports:
      - "8081:8081"
    environment:
      - "SPARK_MASTER=spark://spark-master:7077"
      - PYSPARK_PYTHON=/usr/bin/python3.7
      - PYSPARK_DRIVER_PYTHON=/usr/bin/python3.7
  zookeeper:
    image: confluentinc/cp-zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:5.2.2
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:19092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  kafkapython:
    image: fidelkang/kafkapython
    working_dir: /usr/src/app
    command: tail -f /dev/null
    build:
      context: ./kafkapython/
    env_file:
      - ./envfiles/.kafka.env
    volumes:
      - ./kafkapython:/usr/src/app
    depends_on:
      - zookeeper
      - kafka
    ports:
      - "5000:5000"